name: Deploy static content to Pages
on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Create analytics scripts
      - name: Generate Analytics Scripts
        run: |
          # Create a temporary index file
          cp index.html temp_index.html

          sed -i '/<\/head>/i\
              <!-- Sentry -->\
              <script\
                src="https://js.sentry-cdn.com/${{ secrets.SENTRY_KEY }}.min.js"\
                crossorigin="anonymous"\
              ></script>\
              \
              <!-- Google Analytics -->\
              <script async src="https://www.googletagmanager.com/gtag/js?id=${{ secrets.GA_MEASUREMENT_ID }}"></script>\
              <script>\
                window.dataLayer = window.dataLayer || [];\
                function gtag(){dataLayer.push(arguments);}\
                gtag("js", new Date());\
                gtag("config", "${{ secrets.GA_MEASUREMENT_ID }}");\
              </script>' temp_index.html
          
          # Replace original index with modified version
          mv temp_index.html index.html

      # Create and notify Sentry of release
      - name: Create Sentry Release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          RELEASE_VERSION: ${{ github.sha }}
        run: |
          # Install Sentry CLI
          curl -sL https://sentry.io/get-cli/ | bash

          # Create new release
          sentry-cli releases new $RELEASE_VERSION
          
          # Associate commits with the release
          sentry-cli releases set-commits $RELEASE_VERSION --auto
          
          # Finalize the release
          sentry-cli releases finalize $RELEASE_VERSION
          
          # Tell Sentry this is deployed to production
          sentry-cli releases deploys $RELEASE_VERSION new -e production

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
